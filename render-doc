#! /usr/bin/env bash 

go build -o gotemplate

CONTENT_FOLDER="docs/content"
DOC_FOLDER="$CONTENT_FOLDER/docs"
export COLUMNS=1024

rm -rf $DOC_FOLDER
mkdir -p $DOC_FOLDER

# Generate usage info
echo '---
title: CLI Usage
weight: 1
---' > $DOC_FOLDER/CLI_Usage.md
COLUMNS=150 ./gotemplate '```text@<trim(exec("./gotemplate -h"))@<;```' --nv >> $DOC_FOLDER/CLI_Usage.md

# Generate detailed function info
./gotemplate --no-extension '
@-
---
bookToC: true
---
# Functions reference
<!-- markdownlint-disable MD033 --->

@-completeExamples()
@-foreach ($category := categories())
    @<-print("\n## ", regexReplaceAll(`(?P<name>.*), (?P<url>http://.*)`, $category.Name, `[${name}](${url})`))
    @-foreach ($func := $category.Functions())
        @{func} := function($func)
        @-if (!$func.IsAlias)
            @<println("\n###", $func.Name)
            @<print("```go")
            @<println("func", $func.Signature)
            @-print("```")
            @-if ($func.Aliases)
                @<print("\nAliases: ", join(", ", $func.Aliases))
            @-endif
            @-if ($func.Description)
                @<print("\n<pre>")
                @<String($func.Description).Replace("<", "&lt;")
                @<;</pre>
            @-else
                @-warning($func.Name, "does not have description")
            @-endif
            @-if ($func.HasExamples)
                @<print("\n```go")
                @-replace("\t", "    ", $func.Examples)
                @<print("```")
            @-endif
        @-endif
    @-end foreach
@--end foreach
' > $DOC_FOLDER/function_reference.md

# Add basics section
mkdir -p $DOC_FOLDER/basic_features

echo '---
bookFlatSection: true
weight: 2
---' > $DOC_FOLDER/basic_features/_index.md

# Add advanced section
mkdir -p $DOC_FOLDER/advanced_features

echo '---
bookFlatSection: true
weight: 3
---' > $DOC_FOLDER/advanced_features/_index.md

for file in docs_tests/**/*.md
do
    ./gotemplate -dP $file > ${file%.*}.razor
    ./gotemplate -P $file > ${file%.*}.rendered --accept-no-value
done
rsync -av docs_tests/ $DOC_FOLDER -r

# Add structs documentation
mkdir -p $DOC_FOLDER/Structs
echo '---
bookFlatSection: true
weight: 3
---' > $DOC_FOLDER/Structs/_index.md

# Generate methods on String objects
./gotemplate '```go@<getMethods(String(""))@<;```' > $DOC_FOLDER/Structs/string_methods.md

# Generate methods on StringArray objects
./gotemplate '```go@<getMethods(String("").Split(""))@<;```' > $DOC_FOLDER/Structs/string_array_methods.md

# Generate methods on List objects
./gotemplate '```go@<@getMethods(list())@<;```' > $DOC_FOLDER/Structs/list_methods.md

# Generate methods on Dictionary objects
./gotemplate '```go@<@getMethods(dict())@<;```' > $DOC_FOLDER/Structs/dict_methods.md


# Copy README as the main page
echo '---
type: docs
---' > $CONTENT_FOLDER/_index.md
cat README.md >> $CONTENT_FOLDER/_index.md