<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>gotemplate</title><link>https://coveooss.github.io/gotemplate/docs/advanced_features/</link><description>Recent content on gotemplate</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://coveooss.github.io/gotemplate/docs/advanced_features/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://coveooss.github.io/gotemplate/docs/advanced_features/disabling_processing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coveooss.github.io/gotemplate/docs/advanced_features/disabling_processing/</guid><description>Disabling processing You can completely disable gotemplate in a file with a comment. There&amp;rsquo;s a comment that will completely disable gotemplate and one that will only disable razor, here&amp;rsquo;s an example:
# no-gotemplate! {{ 4 + 5 }} # This will not be interpreted @(4 + 5) # This will also not be interpreted # no-razor! @(4 + 5) # This will not be interpreted Note that if the comment is found anywhere in the file, it will apply</description></item><item><title/><link>https://coveooss.github.io/gotemplate/docs/advanced_features/functions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coveooss.github.io/gotemplate/docs/advanced_features/functions/</guid><description> Functions Defining functions The following file is evaluated: !extensions.gte
Calling functions Without arguments Razor Gotemplate @ChristmasTree() {{ ChristmasTree }} Result ✾ ✾✾✾ ✾✾✾✾✾ ✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ With arguments (colors not shown) Razor Gotemplate @ChristmasTree(5, &amp;quot;Red&amp;quot;, &amp;quot;Green&amp;quot;, &amp;quot;a&amp;quot;) {{ ChristmasTree 5 &amp;quot;Red&amp;quot; &amp;quot;Green&amp;quot; &amp;quot;a&amp;quot; }} Result a aaa aaaaa aaaaaaa aaaaaaaaa</description></item><item><title/><link>https://coveooss.github.io/gotemplate/docs/advanced_features/mixing_razor_and_gotemplate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coveooss.github.io/gotemplate/docs/advanced_features/mixing_razor_and_gotemplate/</guid><description> Operators mixin Note that you cannot combine razor extended expression (+, -, /, *, etc.) with go template expression such as in:
Razor syntax # In this statement, | is interpreted as bitwise or between 2 and 4 @(2 + (2 | mul(4))) # While in this statement (no binary operator), | is interpreted as go template piping operator @(sum 2 (2 | mul 4)) gotemplate syntax {{ add 2 (bor 2 (mul 4)) }} {{ sum 2 (2 | mul 4) }} Result 8 10</description></item><item><title/><link>https://coveooss.github.io/gotemplate/docs/advanced_features/pausing_processing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coveooss.github.io/gotemplate/docs/advanced_features/pausing_processing/</guid><description> Pausing and resuming You can pause gotemplate&amp;rsquo;s or razor processing with the following comments:
{{ add 4 5 }} @(4+5) # gotemplate-pause! {{ add 4 5 }} @(4+5) # gotemplate-resume! # razor-pause! {{ add 4 5 }} @(4+5) # razor-resume! {{ add 4 5 }} @(4+5) Gives the following output:
9 9 # gotemplate-pause! {{ add 4 5 }} @(4+5) # gotemplate-resume! # razor-pause! 9 @(4+5) # razor-resume! 9 9</description></item><item><title/><link>https://coveooss.github.io/gotemplate/docs/advanced_features/sub_templates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coveooss.github.io/gotemplate/docs/advanced_features/sub_templates/</guid><description>Sub Templates Defining templates Razor @-define(&amp;quot;razorTemplate&amp;quot;) This is a template with a variable here: @.var1 For each item in var2: @-for ($item := .var2) Print it: @$item @-end for @-end define Gotemplate {{- define &amp;quot;goTemplate&amp;quot; }} This is a template with a variable here: {{ get . &amp;quot;var1&amp;quot; }} For each item in var2: {{- range $item := .var2 }} Print it: {{ $item }} {{- end }} {{- end }} Using templates @values := data(`{&amp;quot;var1&amp;quot;: &amp;quot;Test&amp;quot;, &amp;quot;var2&amp;quot;: [&amp;quot;Test1&amp;quot;, &amp;quot;Test2&amp;quot;]}`) Razor Gotemplate @template(&amp;quot;razorTemplate&amp;quot;, values) {{ template &amp;quot;goTemplate&amp;quot; .</description></item></channel></rss>