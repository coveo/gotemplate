<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>gotemplate</title><link>https://coveooss.github.io/gotemplate/</link><description>Recent content on gotemplate</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://coveooss.github.io/gotemplate/index.xml" rel="self" type="application/rss+xml"/><item><title>CLI Usage</title><link>https://coveooss.github.io/gotemplate/docs/cli_usage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coveooss.github.io/gotemplate/docs/cli_usage/</guid><description>usage: ./gotemplate [&amp;lt;flags&amp;gt;] &amp;lt;command&amp;gt; [&amp;lt;args&amp;gt; ...] An extended template processor for go. See: https://coveo.github.io/gotemplate for complete documentation. Flags: -h, --help Show context-sensitive help (also try --help-man). or set _GOTEMPLATE_HELP --color Force rendering of colors event if output is redirected or set _GOTEMPLATE_COLOR (alias: --c) -v, --version Get the current version of gotemplate --template-log-level=level Set the template logging level. Accepted values: disabled, panic, fatal, error, warning, info, debug, trace or set _GOTEMPLATE_TEMPLATE_LOG_LEVEL (alias: --tll) -L, --internal-log-level=level Set the internal logging level.</description></item><item><title/><link>https://coveooss.github.io/gotemplate/docs/advanced_features/disabling_processing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coveooss.github.io/gotemplate/docs/advanced_features/disabling_processing/</guid><description>Disabling processing You can completely disable gotemplate in a file with a comment. There&amp;rsquo;s a comment that will completely disable gotemplate and one that will only disable razor, here&amp;rsquo;s an example:
# no-gotemplate! {{ 4 + 5 }} # This will not be interpreted @(4 + 5) # This will also not be interpreted # no-razor! @(4 + 5) # This will not be interpreted Note that if the comment is found anywhere in the file, it will apply</description></item><item><title/><link>https://coveooss.github.io/gotemplate/docs/advanced_features/functions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coveooss.github.io/gotemplate/docs/advanced_features/functions/</guid><description> Functions Defining functions The following file is evaluated: !extensions.gte
Calling functions Without arguments Razor Gotemplate @ChristmasTree() {{ ChristmasTree }} Result ✾ ✾✾✾ ✾✾✾✾✾ ✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ ✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾✾ With arguments (colors not shown) Razor Gotemplate @ChristmasTree(5, &amp;quot;Red&amp;quot;, &amp;quot;Green&amp;quot;, &amp;quot;a&amp;quot;) {{ ChristmasTree 5 &amp;quot;Red&amp;quot; &amp;quot;Green&amp;quot; &amp;quot;a&amp;quot; }} Result a aaa aaaaa aaaaaaa aaaaaaaaa</description></item><item><title/><link>https://coveooss.github.io/gotemplate/docs/advanced_features/mixing_razor_and_gotemplate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coveooss.github.io/gotemplate/docs/advanced_features/mixing_razor_and_gotemplate/</guid><description> Operators mixin Note that you cannot combine razor extended expression (+, -, /, *, etc.) with go template expression such as in:
Razor syntax # In this statement, | is interpreted as bitwise or between 2 and 4 @(2 + (2 | mul(4))) # While in this statement (no binary operator), | is interpreted as go template piping operator @(sum 2 (2 | mul 4)) gotemplate syntax {{ add 2 (bor 2 (mul 4)) }} {{ sum 2 (2 | mul 4) }} Result 8 10</description></item><item><title/><link>https://coveooss.github.io/gotemplate/docs/advanced_features/pausing_processing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coveooss.github.io/gotemplate/docs/advanced_features/pausing_processing/</guid><description> Pausing and resuming You can pause gotemplate&amp;rsquo;s or razor processing with the following comments:
{{ add 4 5 }} @(4+5) # pause-gotemplate! {{ add 4 5 }} @(4+5) # resume-gotemplate! # pause-razor! {{ add 4 5 }} @(4+5) # resume-razor! {{ add 4 5 }} @(4+5) Gives the following output:
9 9 # pause-gotemplate! {{ add 4 5 }} @(4+5) # resume-gotemplate! # pause-razor! 9 @(4+5) # resume-razor! 9 9</description></item><item><title/><link>https://coveooss.github.io/gotemplate/docs/advanced_features/sub_templates/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coveooss.github.io/gotemplate/docs/advanced_features/sub_templates/</guid><description>Sub Templates Defining templates Razor @-define(&amp;quot;razorTemplate&amp;quot;) This is a template with a variable here: @.var1 For each item in var2: @-for ($item := .var2) Print it: @$item @-end for @-end define Gotemplate {{- define &amp;quot;goTemplate&amp;quot; }} This is a template with a variable here: {{ get . &amp;quot;var1&amp;quot; }} For each item in var2: {{- range $item := .var2 }} Print it: {{ $item }} {{- end }} {{- end }} Using templates @values := data(`{&amp;quot;var1&amp;quot;: &amp;quot;Test&amp;quot;, &amp;quot;var2&amp;quot;: [&amp;quot;Test1&amp;quot;, &amp;quot;Test2&amp;quot;]}`) Razor Gotemplate @template(&amp;quot;razorTemplate&amp;quot;, values) {{ template &amp;quot;goTemplate&amp;quot; .</description></item><item><title/><link>https://coveooss.github.io/gotemplate/docs/basic_features/arithmetic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coveooss.github.io/gotemplate/docs/basic_features/arithmetic/</guid><description>Arithmetic Addition Razor expression Go Template Result Note @(1 + 2); {{ add 1 2 }} 3 Addition @add(4, 5); {{ add 4 5 }} 9 or add @sum(6,7); {{ sum 6 7 }} 13 or sum @(2+3); {{ add 2 3 }} 5 Spaces are optional @( 8 + 9 ); {{ add 8 9 }} 17 You can insert an arbitrary number of spaces in expressions @sum(1.</description></item><item><title/><link>https://coveooss.github.io/gotemplate/docs/basic_features/assignation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coveooss.github.io/gotemplate/docs/basic_features/assignation/</guid><description>Assignation Global variables Razor expression Go Template Note @string := &amp;quot;string value&amp;quot;; {{- set $ &amp;quot;string&amp;quot; &amp;quot;string value&amp;quot; }} Global assignation of string @numeric1 := 10; {{- set $ &amp;quot;numeric1&amp;quot; 10 }} Global assignation of integer @numeric2 := 1.23; {{- set $ &amp;quot;numeric2&amp;quot; 1.23 }} Global assignation of floating point @numeric3 := 4E+4; {{- set $ &amp;quot;numeric3&amp;quot; 4E+4 }} Global assignation of large scientific notation number @numeric4 := 5E-3; {{- set $ &amp;quot;numeric4&amp;quot; 5E-3 }} Global assignation of small scientific notation number @hexa1 := 0x100; {{- set $ &amp;quot;hexa1&amp;quot; 0x100 }} Global assignation of hexadecimal number @result1 := (2+3)*4; {{- set $ &amp;quot;result1&amp;quot; (mul (add 2 3) 4) }} Global assignation of mathematic expression @result2 := String(&amp;quot;hello world!</description></item><item><title/><link>https://coveooss.github.io/gotemplate/docs/basic_features/collections/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coveooss.github.io/gotemplate/docs/basic_features/collections/</guid><description>Data collections (lists/slices and dicts/maps) Maps Razor Gotemplate Note @razorDict := dict(&amp;quot;test&amp;quot;, 1, &amp;quot;test2&amp;quot;, 2); {{- set $ &amp;quot;goDict&amp;quot; (dict &amp;quot;test&amp;quot; 1 &amp;quot;test2&amp;quot; 2) }} Creation @razorDict2 := dict(&amp;quot;test3&amp;quot;, 3, &amp;quot;test5&amp;quot;, 5); {{- set $ &amp;quot;goDict2&amp;quot; (dict &amp;quot;test3&amp;quot; 3 &amp;quot;test5&amp;quot; 5) }} Creation @set(.razorDict, &amp;quot;test2&amp;quot;, 3); {{- set .goDict &amp;quot;test2&amp;quot; 3 }} Update @set(.razorDict, &amp;quot;test3&amp;quot;, 4); {{- set .</description></item><item><title/><link>https://coveooss.github.io/gotemplate/docs/basic_features/comments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coveooss.github.io/gotemplate/docs/basic_features/comments/</guid><description>Comments in gotemplate It is important to notice that gotemplate doesn&amp;rsquo;t know the language you are using and any identified gotemplate code is executed no matter where it is. Comments in the host language mean nothing to gotemplate and will be evaluated.
Pseudo comment If you insert gotemplate code into file that contains another kind of code such as hcl, json, yaml, xml, java, c# or any other language, your code editor or linter may complains because it will detect invalid characters.</description></item><item><title/><link>https://coveooss.github.io/gotemplate/docs/basic_features/conditionals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coveooss.github.io/gotemplate/docs/basic_features/conditionals/</guid><description> Conditionals in gotemplate #! @{is_true_1} := true #! @{is_true_2} := true #! @{is_false_1} := false #! @{is_false_2} := false #! @{false_string} := &amp;quot;false&amp;quot; #! @-if($is_true_1) TestTrue #! @-end #! @-if($is_false_1) TestFalse #! @-end #! @-if(and($is_true_1, $is_true_2)) TestTrueAndTrue #! @-end #! @-if(and($is_true_1, $is_false_1)) TestTrueAndFalse #! @-end #! @-if(or($is_true_1, $is_false_1)) TestTrueOrFalse #! @-end #! @-if($false_string) FalseStringIsTrue #! @-end will give:
TestTrue TestTrueAndTrue TestTrueOrFalse FalseStringIsTrue</description></item><item><title/><link>https://coveooss.github.io/gotemplate/docs/basic_features/data/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coveooss.github.io/gotemplate/docs/basic_features/data/</guid><description>Data manipulation Using a data file with the following content in a format that doesn&amp;rsquo;t follow a standard.
IntegerValue = 1 FloatValue = 1.23 StringValue = &amp;quot;Foo bar&amp;quot; EquationResult = @(2 + 2 * 3 ** 6) ListValue = [&amp;quot;value1&amp;quot;, &amp;quot;value2&amp;quot;] DictValue = {&amp;quot;key1&amp;quot;: &amp;quot;value1&amp;quot;, &amp;quot;key2&amp;quot;: &amp;quot;value2&amp;quot;} toYaml Razor Gotemplate @toYaml(data(&amp;quot;!Data&amp;quot;)) {{ toYaml (data &amp;quot;!Data&amp;quot;) }} DictValue: key1: value1 key2: value2 EquationResult: 46658 FloatValue: 1.</description></item><item><title/><link>https://coveooss.github.io/gotemplate/docs/basic_features/literals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coveooss.github.io/gotemplate/docs/basic_features/literals/</guid><description>Literals protection E-Mail protection The razor convertor is designed to detect email address such as john.doe@company.com or alert@127.0.0.1.
But it you type something like @john.doe@company.com, it will try to resolve variable john.doe and company.com.
The result would be &amp;lt;no value&amp;gt;&amp;lt;no value&amp;gt; unless you have defined:
@john := data(&amp;quot;doe = 123.45&amp;quot;) @company := data(&amp;quot;com = @Math.Pi&amp;quot;) In that case, the result of @john.doe@(company.com) will be 123.453.141592653589793.
&amp;ldquo;&amp;#64;&amp;rdquo; protection You can also render the &amp;ldquo;&amp;#64;&amp;rdquo; characters by writing &amp;#64;&amp;#64;.</description></item><item><title/><link>https://coveooss.github.io/gotemplate/docs/basic_features/os-commands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coveooss.github.io/gotemplate/docs/basic_features/os-commands/</guid><description>OS commands It is possible to run OS commands using the following go template functions:
exec returns the result of a shell command as structured data. run returns the result of a shell command as a string. exec Razor @{example} := exec(&amp;quot;printf &#39;SomeData: test2\nSomeData2: test3&#39;&amp;quot;) First result: @{example.SomeData} Second result: @{example.SomeData2} @{example} @{example2} := exec(&amp;quot;printf &#39;Test&#39;&amp;quot;) Should be `string`: @typeOf($example2) @{example2} Gotemplate {{- $example := exec &amp;quot;printf &#39;SomeData: test2\nSomeData2: test3&#39;&amp;quot; }} First result: {{ $example.</description></item><item><title/><link>https://coveooss.github.io/gotemplate/docs/function_reference/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coveooss.github.io/gotemplate/docs/function_reference/</guid><description>Base go template functions and func and(arg0 reflect.Value, args ...reflect.Value) reflect.Value Returns the boolean AND of its arguments by returning the first empty argument or the last argument, that is, &amp;ldquo;and x y&amp;rdquo; behaves as &amp;ldquo;if x then y else x&amp;rdquo;. All the arguments are evaluated.
call func call(fn reflect.Value, args ...reflect.Value) reflect.Value, error) Returns the result of calling the first argument, which must be a function, with the remaining arguments as parameters.</description></item><item><title/><link>https://coveooss.github.io/gotemplate/docs/structs/dict_methods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coveooss.github.io/gotemplate/docs/structs/dict_methods/</guid><description>@Add(interface{}, interface{}) IDictionary AsMap() map[string]interface{} Clone(...interface{}) IDictionary Count() int Create(...int) IDictionary CreateList(...int) IGenericList Default(interface{}, interface{}) interface{} Delete(interface{}, ...interface{}) IDictionary, error Flush(...interface{}) IDictionary Get(...interface{}) interface{} GetHelpers() IDictionaryHelper, IListHelper GetKeys() IGenericList GetValues() IGenericList Has(...interface{}) bool KeysAsString() StringArray Len() int Merge(IDictionary, ...IDictionary) IDictionary Native() interface{} Omit(interface{}, ...interface{}) IDictionary Pop(...interface{}) interface{} PrettyPrint() string Set(interface{}, interface{}) IDictionary String() string Transpose() IDictionary TypeName() String</description></item><item><title/><link>https://coveooss.github.io/gotemplate/docs/structs/list_methods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coveooss.github.io/gotemplate/docs/structs/list_methods/</guid><description>@Append(...interface{}) IGenericList AsArray() []interface{} Cap() int Capacity() int Clone() IGenericList Contains(...interface{}) bool Count() int Create(...int) IGenericList CreateDict(...int) IDictionary First() interface{} Get(...int) interface{} GetHelpers() IDictionaryHelper, IListHelper Has(...interface{}) bool Intersect(...interface{}) IGenericList Join(interface{}) String Last() interface{} Len() int New(...interface{}) IGenericList Pop(...int) interface{}, IGenericList Prepend(...interface{}) IGenericList PrettyPrint() string Remove(...int) IGenericList Reverse() IGenericList Set(int, interface{}) IGenericList, error String() string StringArray() StringArray Strings() []string TypeName() String Union(...interface{}) IGenericList Unique() IGenericList Without(...interface{}) IGenericList</description></item><item><title/><link>https://coveooss.github.io/gotemplate/docs/structs/string_array_methods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coveooss.github.io/gotemplate/docs/structs/string_array_methods/</guid><description>Center(int) StringArray Indent(string) StringArray IndentN(int) StringArray Join(interface{}) String Sorted() StringArray Str() []string Strings() []string Title() StringArray ToLower() StringArray ToLowerSpecial(unicode.SpecialCase) StringArray ToTitle() StringArray ToTitleSpecial(unicode.SpecialCase) StringArray ToUpper() StringArray ToUpperSpecial(unicode.SpecialCase) StringArray Trim(string) StringArray TrimFunc(func(int32) bool) StringArray TrimLeft(string) StringArray TrimLeftFunc(func(int32) bool) StringArray TrimPrefix(string) StringArray TrimRight(string) StringArray TrimRightFunc(func(int32) bool) StringArray TrimSpace() StringArray TrimSuffix(string) StringArray UnIndent() StringArray Wrap(int) StringArray</description></item><item><title/><link>https://coveooss.github.io/gotemplate/docs/structs/string_methods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://coveooss.github.io/gotemplate/docs/structs/string_methods/</guid><description>AddLineNumber(int) String Center(int) String Compare(string) int Contains(string) bool ContainsAny(string) bool ContainsRune(int32) bool Count(string) int EqualFold(string) bool Escape() String Fields() StringArray FieldsFunc(func(int32) bool) StringArray FieldsID() StringArray GetContextAtPosition(int, string, string) String, int GetWordAtPosition(int, ...string) String, int HasPrefix(string) bool HasSuffix(string) bool Indent(string) String IndentN(int) String Index(string) int IndexAll(string) []int IndexAny(string) int IndexByte(uint8) int IndexFunc(func(int32) bool) int IndexRune(int32) int Join(...interface{}) String LastIndex(string) int LastIndexAny(string) int LastIndexByte(uint8) int LastIndexFunc(func(int32) bool) int Len() int Lines() StringArray Map(func(int32) int32) String ParseBool() bool Protect() String, StringArray Quote() String Repeat(int) String Replace(string, string) String ReplaceN(string, string, int) String RestoreProtected(StringArray) String SelectContext(int, string, string) String SelectWord(int, .</description></item></channel></rss>